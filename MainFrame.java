import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.sql.Timestamp;
import java.util.*;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author tisya
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private Object studentadder;
    private Object courseadder;
    private StudentEntry currentstudent;
    private Object LastNametf;
    private String FirstName;
    private StudentEntry StudentEntry;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildStudentComboBoxes();
        rebuildCourseComboBoxes();

    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }

        rebuildCourseComboBoxes();
    }

    public void rebuildStudentComboBoxes() {
        ArrayList<StudentEntry> student = StudentQueries.getAllStudents();
        ArrayList<String> studentName = new ArrayList<>();
        for (StudentEntry s : student) {
            String Name = s.getLastName() + "," + s.getFirstName();
            studentName.add(Name);
        }
        Studentchooser.setModel(new javax.swing.DefaultComboBoxModel(studentName.toArray()));
        Studentchooser1.setModel(new javax.swing.DefaultComboBoxModel(studentName.toArray()));
        Student.setModel(new javax.swing.DefaultComboBoxModel(studentName.toArray()));
        adropstudentcb.setModel(new javax.swing.DefaultComboBoxModel(studentName.toArray()));
        // currentstudentcb.setModel(new javax.swing.DefaultComboBoxModel(studentName.toArray()));
        {

        }

    }

    public void rebuildCourseComboBoxes() {

        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemester);
        coursechooser.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        displayselectedcoursescb.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        adropcoursecb.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        sdropcoursecb.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Heading = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Admin = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        AddSemPan = new javax.swing.JPanel();
        SemName = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        AddCoursePan = new javax.swing.JPanel();
        CourseCode = new javax.swing.JLabel();
        addcoursecodetf = new javax.swing.JTextField();
        CourseDisc = new javax.swing.JLabel();
        addcoursedescriptiontf = new javax.swing.JTextField();
        Seats = new javax.swing.JLabel();
        addseatsspinner = new javax.swing.JSpinner();
        CourseSubmitbutton = new javax.swing.JButton();
        CourseAddDispLabel = new javax.swing.JLabel();
        AddStudentsPan = new javax.swing.JPanel();
        Lastnametf = new javax.swing.JTextField();
        Studentsubmit = new javax.swing.JButton();
        LName = new javax.swing.JLabel();
        FName = new javax.swing.JLabel();
        Firstnametf = new javax.swing.JTextField();
        StudentIDtf = new javax.swing.JTextField();
        SID = new javax.swing.JLabel();
        DispAddStudentLabel = new javax.swing.JLabel();
        DispCoursePan = new javax.swing.JPanel();
        SelectedCourse = new javax.swing.JLabel();
        displayselectedcoursescb = new javax.swing.JComboBox<>();
        Displaycourseofstudentsbutton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        Waitlistedstudentable = new javax.swing.JTable();
        WailistS = new javax.swing.JLabel();
        ScheduleS = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        ScheduledStudenttable = new javax.swing.JTable();
        DropStudentPan = new javax.swing.JPanel();
        SelStu = new javax.swing.JLabel();
        adropstudentcb = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        adropstudentta = new javax.swing.JTextArea();
        adropstudentbutton = new javax.swing.JButton();
        DropCoursePan = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        adropcoursecb = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        adropcoursetf = new javax.swing.JTextArea();
        adropcoursebutton = new javax.swing.JButton();
        StudentTab = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        DispSched = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayschedule = new javax.swing.JTable();
        Student = new javax.swing.JComboBox<>();
        DisplayScheduleButton = new javax.swing.JButton();
        DispCourse = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Displaycoursetable = new javax.swing.JTable();
        Coursedisplay = new javax.swing.JButton();
        DropCourse = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        Selectcourselabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        sdropcoursecb = new javax.swing.JComboBox<>();
        Studentchooser1 = new javax.swing.JComboBox<>();
        SDropcoursebutton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Sdropcourseta = new javax.swing.JTextArea();
        ScheduleCourse = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        coursechooser = new javax.swing.JComboBox<>();
        Studentchooser = new javax.swing.JComboBox<>();
        Schedulecoursebutton = new javax.swing.JButton();
        Schedulecourselabel = new javax.swing.JLabel();
        Schedulecourseslabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Heading.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        Heading.setForeground(new java.awt.Color(0, 153, 153));
        Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Heading.setText("Course Scheduler");

        SemName.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout AddSemPanLayout = new javax.swing.GroupLayout(AddSemPan);
        AddSemPan.setLayout(AddSemPanLayout);
        AddSemPanLayout.setHorizontalGroup(
            AddSemPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSemPanLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(SemName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddSemPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddSemPanLayout.createSequentialGroup()
                        .addComponent(addSemesterSubmitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(431, Short.MAX_VALUE))
        );
        AddSemPanLayout.setVerticalGroup(
            AddSemPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddSemPanLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(AddSemPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SemName)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddSemPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSemesterStatusLabel)
                    .addComponent(addSemesterSubmitButton))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", AddSemPan);

        CourseCode.setText("Couse Code :");

        addcoursecodetf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcoursecodetfActionPerformed(evt);
            }
        });

        CourseDisc.setText("Course Description : ");

        Seats.setText("Seats :");

        CourseSubmitbutton.setText("Submit");
        CourseSubmitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseSubmitbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddCoursePanLayout = new javax.swing.GroupLayout(AddCoursePan);
        AddCoursePan.setLayout(AddCoursePanLayout);
        AddCoursePanLayout.setHorizontalGroup(
            AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCoursePanLayout.createSequentialGroup()
                .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddCoursePanLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CourseDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Seats)
                            .addComponent(CourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addcoursecodetf, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CourseSubmitbutton)
                            .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addcoursedescriptiontf)
                                .addGroup(AddCoursePanLayout.createSequentialGroup()
                                    .addComponent(addseatsspinner, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 169, Short.MAX_VALUE)))))
                    .addGroup(AddCoursePanLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(CourseAddDispLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(500, Short.MAX_VALUE))
        );
        AddCoursePanLayout.setVerticalGroup(
            AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCoursePanLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addcoursecodetf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseDisc)
                    .addComponent(addcoursedescriptiontf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Seats)
                    .addComponent(addseatsspinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CourseSubmitbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CourseAddDispLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        jTabbedPane2.addTab("Add Course", AddCoursePan);

        Studentsubmit.setText("Submit");
        Studentsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentsubmitActionPerformed(evt);
            }
        });

        LName.setText("Last Name :");

        FName.setText("First Name : ");

        StudentIDtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentIDtfActionPerformed(evt);
            }
        });

        SID.setText("Student ID : ");

        DispAddStudentLabel.setText("-");

        javax.swing.GroupLayout AddStudentsPanLayout = new javax.swing.GroupLayout(AddStudentsPan);
        AddStudentsPan.setLayout(AddStudentsPanLayout);
        AddStudentsPanLayout.setHorizontalGroup(
            AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentsPanLayout.createSequentialGroup()
                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddStudentsPanLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddStudentsPanLayout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(Studentsubmit))
                            .addGroup(AddStudentsPanLayout.createSequentialGroup()
                                .addComponent(SID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StudentIDtf, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddStudentsPanLayout.createSequentialGroup()
                                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddStudentsPanLayout.createSequentialGroup()
                                        .addComponent(FName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(AddStudentsPanLayout.createSequentialGroup()
                                        .addComponent(LName)
                                        .addGap(16, 16, 16)))
                                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Firstnametf, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(Lastnametf)))))
                    .addGroup(AddStudentsPanLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(DispAddStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(503, Short.MAX_VALUE))
        );
        AddStudentsPanLayout.setVerticalGroup(
            AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddStudentsPanLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentIDtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FName)
                    .addComponent(Firstnametf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddStudentsPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LName)
                    .addComponent(Lastnametf, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Studentsubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DispAddStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jTabbedPane2.addTab("Add Student", AddStudentsPan);

        SelectedCourse.setText("Selected Course:");

        displayselectedcoursescb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayselectedcoursescb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayselectedcoursescbActionPerformed(evt);
            }
        });

        Displaycourseofstudentsbutton.setText("Display");
        Displaycourseofstudentsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaycourseofstudentsbuttonActionPerformed(evt);
            }
        });

        Waitlistedstudentable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ));
        jScrollPane6.setViewportView(Waitlistedstudentable);

        WailistS.setText("Waitlisted students");

        ScheduleS.setText("Scheduled Students");

        ScheduledStudenttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ));
        jScrollPane7.setViewportView(ScheduledStudenttable);

        javax.swing.GroupLayout DispCoursePanLayout = new javax.swing.GroupLayout(DispCoursePan);
        DispCoursePan.setLayout(DispCoursePanLayout);
        DispCoursePanLayout.setHorizontalGroup(
            DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DispCoursePanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DispCoursePanLayout.createSequentialGroup()
                        .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WailistS))
                        .addGap(18, 18, 18)
                        .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ScheduleS, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(251, Short.MAX_VALUE))
                    .addGroup(DispCoursePanLayout.createSequentialGroup()
                        .addComponent(SelectedCourse)
                        .addGap(18, 18, 18)
                        .addComponent(displayselectedcoursescb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Displaycourseofstudentsbutton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        DispCoursePanLayout.setVerticalGroup(
            DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DispCoursePanLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayselectedcoursescb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Displaycourseofstudentsbutton)
                    .addComponent(SelectedCourse))
                .addGap(25, 25, 25)
                .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WailistS)
                    .addComponent(ScheduleS))
                .addGap(18, 18, 18)
                .addGroup(DispCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Course list of students", DispCoursePan);

        SelStu.setText("Select Student:");

        adropstudentcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adropstudentta.setColumns(20);
        adropstudentta.setRows(5);
        jScrollPane4.setViewportView(adropstudentta);

        adropstudentbutton.setText("Drop Student");
        adropstudentbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adropstudentbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DropStudentPanLayout = new javax.swing.GroupLayout(DropStudentPan);
        DropStudentPan.setLayout(DropStudentPanLayout);
        DropStudentPanLayout.setHorizontalGroup(
            DropStudentPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropStudentPanLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(DropStudentPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DropStudentPanLayout.createSequentialGroup()
                        .addComponent(SelStu)
                        .addGap(18, 18, 18)
                        .addComponent(adropstudentcb, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(adropstudentbutton)))
                .addContainerGap(352, Short.MAX_VALUE))
        );
        DropStudentPanLayout.setVerticalGroup(
            DropStudentPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropStudentPanLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(DropStudentPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelStu)
                    .addComponent(adropstudentcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adropstudentbutton))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", DropStudentPan);

        jLabel16.setText("Select Course to be Dropped:");

        adropcoursecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adropcoursetf.setColumns(20);
        adropcoursetf.setRows(5);
        jScrollPane5.setViewportView(adropcoursetf);

        adropcoursebutton.setText("Drop Course");
        adropcoursebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adropcoursebuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DropCoursePanLayout = new javax.swing.GroupLayout(DropCoursePan);
        DropCoursePan.setLayout(DropCoursePanLayout);
        DropCoursePanLayout.setHorizontalGroup(
            DropCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropCoursePanLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(DropCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DropCoursePanLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(adropcoursecb, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adropcoursebutton)))
                .addContainerGap(482, Short.MAX_VALUE))
        );
        DropCoursePanLayout.setVerticalGroup(
            DropCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropCoursePanLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(DropCoursePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(adropcoursecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adropcoursebutton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", DropCoursePan);

        javax.swing.GroupLayout AdminLayout = new javax.swing.GroupLayout(Admin);
        Admin.setLayout(AdminLayout);
        AdminLayout.setHorizontalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        AdminLayout.setVerticalGroup(
            AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Admin", Admin);

        jTabbedPane3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane3FocusGained(evt);
            }
        });

        jLabel13.setText("Select Student:");

        displayschedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(displayschedule);

        Student.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentActionPerformed(evt);
            }
        });

        DisplayScheduleButton.setText("Display");
        DisplayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DispSchedLayout = new javax.swing.GroupLayout(DispSched);
        DispSched.setLayout(DispSchedLayout);
        DispSchedLayout.setHorizontalGroup(
            DispSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DispSchedLayout.createSequentialGroup()
                .addGroup(DispSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DispSchedLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Student, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DispSchedLayout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(DisplayScheduleButton))
                    .addGroup(DispSchedLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        DispSchedLayout.setVerticalGroup(
            DispSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DispSchedLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(DispSchedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Student, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DisplayScheduleButton)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Display Schedule", DispSched);

        DispCourse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DispCourseFocusGained(evt);
            }
        });

        Displaycoursetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane1.setViewportView(Displaycoursetable);

        Coursedisplay.setText("Display");
        Coursedisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoursedisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DispCourseLayout = new javax.swing.GroupLayout(DispCourse);
        DispCourse.setLayout(DispCourseLayout);
        DispCourseLayout.setHorizontalGroup(
            DispCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DispCourseLayout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(Coursedisplay)
                .addContainerGap(516, Short.MAX_VALUE))
            .addGroup(DispCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DispCourseLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(100, 100, 100)))
        );
        DispCourseLayout.setVerticalGroup(
            DispCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DispCourseLayout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addComponent(Coursedisplay)
                .addGap(21, 21, 21))
            .addGroup(DispCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DispCourseLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(51, Short.MAX_VALUE)))
        );

        jTabbedPane3.addTab("Display Courses", DispCourse);

        Selectcourselabel.setText("Selected Course:");

        jLabel15.setText("Select Student:");

        sdropcoursecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sdropcoursecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sdropcoursecbActionPerformed(evt);
            }
        });

        Studentchooser1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SDropcoursebutton.setText("Drop Course");
        SDropcoursebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDropcoursebuttonActionPerformed(evt);
            }
        });

        Sdropcourseta.setColumns(20);
        Sdropcourseta.setRows(5);
        jScrollPane3.setViewportView(Sdropcourseta);

        javax.swing.GroupLayout DropCourseLayout = new javax.swing.GroupLayout(DropCourse);
        DropCourse.setLayout(DropCourseLayout);
        DropCourseLayout.setHorizontalGroup(
            DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropCourseLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DropCourseLayout.createSequentialGroup()
                        .addComponent(Selectcourselabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sdropcoursecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DropCourseLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(Studentchooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SDropcoursebutton))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        DropCourseLayout.setVerticalGroup(
            DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DropCourseLayout.createSequentialGroup()
                .addGroup(DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DropCourseLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel14))
                    .addGroup(DropCourseLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Selectcourselabel)
                            .addComponent(sdropcoursecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DropCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(Studentchooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SDropcoursebutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", DropCourse);

        jLabel11.setText("Select Course:");

        jLabel12.setText("Select Student:");

        coursechooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        coursechooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursechooserActionPerformed(evt);
            }
        });

        Studentchooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Studentchooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentchooserActionPerformed(evt);
            }
        });

        Schedulecoursebutton.setText("Submit");
        Schedulecoursebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchedulecoursebuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ScheduleCourseLayout = new javax.swing.GroupLayout(ScheduleCourse);
        ScheduleCourse.setLayout(ScheduleCourseLayout);
        ScheduleCourseLayout.setHorizontalGroup(
            ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScheduleCourseLayout.createSequentialGroup()
                .addGroup(ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ScheduleCourseLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ScheduleCourseLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(coursechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Schedulecoursebutton)
                                .addGroup(ScheduleCourseLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Studentchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(ScheduleCourseLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(Schedulecourselabel))
                    .addGroup(ScheduleCourseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Schedulecourseslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(425, Short.MAX_VALUE))
        );
        ScheduleCourseLayout.setVerticalGroup(
            ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScheduleCourseLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(coursechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ScheduleCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Studentchooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Schedulecoursebutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(Schedulecourselabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Schedulecourseslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane3.addTab("Schedule Courses", ScheduleCourse);

        javax.swing.GroupLayout StudentTabLayout = new javax.swing.GroupLayout(StudentTab);
        StudentTab.setLayout(StudentTabLayout);
        StudentTabLayout.setHorizontalGroup(
            StudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3))
        );
        StudentTabLayout.setVerticalGroup(
            StudentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentTabLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", StudentTab);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        currentSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSemesterComboBoxActionPerformed(evt);
            }
        });

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 803, Short.MAX_VALUE)
                    .addComponent(Heading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeSemesterButton)
                .addGap(43, 43, 43)
                .addComponent(aboutButton)
                .addGap(103, 103, 103))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        addSemesterTextfield.setText("");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed


    private void StudentIDtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentIDtfActionPerformed

    }//GEN-LAST:event_StudentIDtfActionPerformed

    private void CourseSubmitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseSubmitbuttonActionPerformed
        // TODO add your handling code here:
        String coursecode = addcoursecodetf.getText();
        String courseDescription = addcoursedescriptiontf.getText();
        int Seats = Integer.parseInt(addseatsspinner.getValue().toString());
        String semester = currentSemesterLabel.getText();
        CourseEntry course = new CourseEntry(semester, coursecode, courseDescription, Seats);
        CourseQueries.addCourse(course);
        CourseAddDispLabel.setText("Course " + coursecode + " has been added");
        addcoursecodetf.setText("");
        addcoursedescriptiontf.setText("");
        addseatsspinner.setValue(0);
        rebuildCourseComboBoxes();


    }//GEN-LAST:event_CourseSubmitbuttonActionPerformed

    private void jPanel5ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5ComponentHidden

    private void StudentsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentsubmitActionPerformed
        // TODO add your handling code here:
        String studentID = StudentIDtf.getText();
        String FirstName = Firstnametf.getText();
        String LastName = Lastnametf.getText();
        StudentEntry student = new StudentEntry(studentID, FirstName, LastName);
        StudentQueries.addStudent(student);
        DispAddStudentLabel.setText(LastName + ", " + FirstName + " has been added.");
        StudentIDtf.setText("");
        Firstnametf.setText("");
        Lastnametf.setText("");
        rebuildStudentComboBoxes();

    }//GEN-LAST:event_StudentsubmitActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        String currentSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(currentSemester);
        this.currentSemester = currentSemester;
        String currentSemesterValue = currentSemester;
        rebuildCourseComboBoxes();

    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void DisplayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayScheduleButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> studentslist = StudentQueries.getAllStudents();
        String studentID = studentslist.get(Student.getSelectedIndex()).getStudentID();
        ArrayList<Schedule> scheduling = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        DefaultTableModel displayscheduleModel = (DefaultTableModel) displayschedule.getModel();
        displayscheduleModel.setNumRows(0);
        Object[] rowData = new Object[2];
        for (Schedule scheduler : scheduling) {
            rowData[0] = scheduler.getCourseCode();
            rowData[1] = scheduler.getStatus();
            displayscheduleModel.addRow(rowData);

        }
    }//GEN-LAST:event_DisplayScheduleButtonActionPerformed

    private void coursechooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursechooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursechooserActionPerformed

    private void SchedulecoursebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchedulecoursebuttonActionPerformed
        // TODO add your handling code here:
        String Semester = currentSemesterLabel.getText();
        String Coursecode = (String) coursechooser.getSelectedItem();
        ArrayList<StudentEntry> student = StudentQueries.getAllStudents();
        String StudentID = student.get(Studentchooser.getSelectedIndex()).getStudentID();
        Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        String status;
        int Seats = CourseQueries.getCourseSeats(Semester, Coursecode);
        int leftseats = ScheduleQueries.getScheduledStudentCount(Semester, Coursecode);
        if (Seats <= leftseats) {
            status = "W";
            Schedulecourseslabel.setText(Studentchooser.getSelectedItem() + " has been waitlisted for " + coursechooser.getSelectedItem());
        } else {
            status = "S";
            Schedulecourseslabel.setText(Studentchooser.getSelectedItem() + " has been scheduled for " + coursechooser.getSelectedItem());

        }
        Schedule scheduler = new Schedule(Semester, Coursecode, StudentID, status, timestamp);
        ScheduleQueries.addScheduleEntry(scheduler);


    }//GEN-LAST:event_SchedulecoursebuttonActionPerformed

    private void StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentActionPerformed
        
    }//GEN-LAST:event_StudentActionPerformed

    private void adropcoursebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adropcoursebuttonActionPerformed
        // TODO add your handling code here:
        String coursecode = adropcoursecb.getSelectedItem().toString();
        adropcoursetf.setText("Scheduled Students dropped from this course\n");
        ArrayList<Schedule> schedulelist = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, coursecode);
        ArrayList<Schedule> waitlist = ScheduleQueries.getWaitlistedStudentByCourse(currentSemester, coursecode);
        for (Schedule schedule : schedulelist) {
            StudentEntry student = StudentQueries.getStudent(schedule.getStudentID());

            adropcoursetf.append("\n"+schedule.getStudentID());
        }
        adropcoursetf.append("Waitlisted Student is dropped from this Course");
        for (Schedule schedule : waitlist) {
            StudentEntry student = StudentQueries.getStudent(schedule.getStudentID());
            adropcoursetf.append("\n"+schedule.getStudentID());


    }//GEN-LAST:event_adropcoursebuttonActionPerformed
        ScheduleQueries.dropScheduleByCourse(currentSemester, coursecode);
        CourseQueries.dropCourse(currentSemester, coursecode);
    }
    private void DisplaycourseofstudentsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaycourseofstudentsbuttonActionPerformed
        // TODO add your handling code here:
        String courses = displayselectedcoursescb.getSelectedItem().toString();
        ArrayList<Schedule> AdminScheduler = ScheduleQueries.getScheduledStudentsByCourse(currentSemester, courses);
        ArrayList<Schedule> AdminWaitlisted = ScheduleQueries.getWaitlistedStudentByCourse(currentSemester, courses);
        DefaultTableModel ScheduledStudenttableModel = (DefaultTableModel) ScheduledStudenttable.getModel();
        DefaultTableModel WaitlistedstudentableModel = (DefaultTableModel) Waitlistedstudentable.getModel();

        ScheduledStudenttableModel.setNumRows(0);
        WaitlistedstudentableModel.setNumRows(0);

        Object[] rowData1 = new Object[3];
        Object[] rowData2 = new Object[3];

        for (Schedule scheduling : AdminScheduler) {
            String StudentID = scheduling.getStudentID();
            StudentEntry selectedstudents = StudentQueries.getStudent(StudentID);
            String FirstName = selectedstudents.getFirstName();
            String LastName = selectedstudents.getLastName();
            rowData1[0] = LastName;
            rowData1[1] = FirstName;
            rowData1[2] = StudentID;
            ScheduledStudenttableModel.addRow(rowData1);
        }

        for (Schedule waitlisting : AdminWaitlisted) {
            String StudentID = waitlisting.getStudentID();
            StudentEntry selectedstudents = StudentQueries.getStudent(StudentID);
            String FirstName = selectedstudents.getFirstName();
            String LastName = selectedstudents.getLastName();
            rowData2[0] = LastName;
            rowData2[1] = FirstName;
            rowData2[2] = StudentID;
            WaitlistedstudentableModel.addRow(rowData2);

        }


    }//GEN-LAST:event_DisplaycourseofstudentsbuttonActionPerformed

    private void adropstudentbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adropstudentbuttonActionPerformed
        // TODO add your handling code here:
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();

        StudentEntry StudentID = students.get(adropstudentcb.getSelectedIndex());
        //String StudentID = adropstudentcb.getSelectedItem().toString();
        StudentEntry student = StudentQueries.getStudent(StudentID.getStudentID());
        StudentQueries.dropStudent(adropstudentcb.getSelectedItem().toString());
        adropstudentta.setText(StudentID.toString() + " has been dropped from the list of students.\n");

        for (String semester : SemesterQueries.getSemesterList()) {
            ArrayList<Schedule> schedulinglist = ScheduleQueries.getScheduleByStudent(semester, StudentID.getStudentID());
            adropstudentta.append("\nFor Semester: " + semester);
            for (Schedule scheduler : schedulinglist) {
                if (scheduler.getStatus().equals("S")) {
                    adropstudentta.append("\n" + StudentID.getStudentID() + " has been dropped from " + scheduler.getCourseCode());
                    ArrayList<Schedule> waitlisted = ScheduleQueries.getWaitlistedStudentByCourse(semester, scheduler.getCourseCode());
                    if (waitlisted.size() > 0) {
                        StudentEntry waitlistedstudents = StudentQueries.getStudent(waitlisted.get(0).getStudentID());
                        adropstudentta.append("\n" + waitlisted.get(0).getStudentID() + " has been scheduled into " + scheduler.getCourseCode() + " \n");
                        ScheduleQueries.updateScheduleEntry(semester, waitlisted.get(0));
                    }

                    ScheduleQueries.dropStudentScheduleByCourse(semester, StudentID.getStudentID(), scheduler.getCourseCode());

                } else {
                    adropstudentta.append("\n" + StudentID + " has been dropped from the waitlist of " + scheduler.getCourseCode() + "\n");

                }
    }//GEN-LAST:event_adropstudentbuttonActionPerformed
        }

    }
    private void SDropcoursebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDropcoursebuttonActionPerformed
        // TODO add your handling code here:
        String CourseCode = sdropcoursecb.getSelectedItem().toString();
        ArrayList<StudentEntry> student = StudentQueries.getAllStudents();
        String StudentID = student.get(Studentchooser1.getSelectedIndex()).getStudentID();
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, StudentID, CourseCode);
        Sdropcourseta.setText(Studentchooser1.getSelectedItem().toString() + " has been dropped from " + CourseCode);
        ArrayList<Schedule> waitlist = ScheduleQueries.getWaitlistedStudentByCourse(currentSemester, CourseCode);
        if (waitlist.size() > 0) {
            ScheduleQueries.updateScheduleEntry(currentSemester, waitlist.get(0));
            StudentEntry waitStudent = StudentQueries.getStudent(waitlist.get(0).getStudentID());
            Sdropcourseta.append("\n" + waitStudent.getLastName() + ", " + waitStudent.getFirstName() + " has been scheduled into " + CourseCode);

        }


    }//GEN-LAST:event_SDropcoursebuttonActionPerformed

    private void displayselectedcoursescbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayselectedcoursescbActionPerformed
                // TODO add your handling code here:
        
    }//GEN-LAST:event_displayselectedcoursescbActionPerformed

    private void addcoursecodetfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcoursecodetfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addcoursecodetfActionPerformed

    private void currentSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentSemesterComboBoxActionPerformed

    private void sdropcoursecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sdropcoursecbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sdropcoursecbActionPerformed

    private void StudentchooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentchooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StudentchooserActionPerformed

    private void jTabbedPane3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane3FocusGained
        
    }//GEN-LAST:event_jTabbedPane3FocusGained

    private void CoursedisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoursedisplayActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCourseTableModel = (DefaultTableModel) Displaycoursetable.getModel();
        displayCourseTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        for (CourseEntry course : courses) {
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCourseTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_CoursedisplayActionPerformed

    private void DispCourseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DispCourseFocusGained
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemester);
        DefaultTableModel displayCourseTableModel = (DefaultTableModel) Displaycoursetable.getModel();
        displayCourseTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        for (CourseEntry course : courses) {
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getDescription();
            rowData[2] = course.getSeats();
            displayCourseTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_DispCourseFocusGained

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
                JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = "Tisya Vaidya";
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddCoursePan;
    private javax.swing.JPanel AddSemPan;
    private javax.swing.JPanel AddStudentsPan;
    private javax.swing.JPanel Admin;
    private javax.swing.JLabel CourseAddDispLabel;
    private javax.swing.JLabel CourseCode;
    private javax.swing.JLabel CourseDisc;
    private javax.swing.JButton CourseSubmitbutton;
    private javax.swing.JButton Coursedisplay;
    private javax.swing.JLabel DispAddStudentLabel;
    private javax.swing.JPanel DispCourse;
    private javax.swing.JPanel DispCoursePan;
    private javax.swing.JPanel DispSched;
    private javax.swing.JButton DisplayScheduleButton;
    private javax.swing.JButton Displaycourseofstudentsbutton;
    private javax.swing.JTable Displaycoursetable;
    private javax.swing.JPanel DropCourse;
    private javax.swing.JPanel DropCoursePan;
    private javax.swing.JPanel DropStudentPan;
    private javax.swing.JLabel FName;
    private javax.swing.JTextField Firstnametf;
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel LName;
    private javax.swing.JTextField Lastnametf;
    private javax.swing.JButton SDropcoursebutton;
    private javax.swing.JLabel SID;
    private javax.swing.JPanel ScheduleCourse;
    private javax.swing.JLabel ScheduleS;
    private javax.swing.JButton Schedulecoursebutton;
    private javax.swing.JLabel Schedulecourselabel;
    private javax.swing.JLabel Schedulecourseslabel;
    private javax.swing.JTable ScheduledStudenttable;
    private javax.swing.JTextArea Sdropcourseta;
    private javax.swing.JLabel Seats;
    private javax.swing.JLabel SelStu;
    private javax.swing.JLabel Selectcourselabel;
    private javax.swing.JLabel SelectedCourse;
    private javax.swing.JLabel SemName;
    private javax.swing.JComboBox<String> Student;
    private javax.swing.JTextField StudentIDtf;
    private javax.swing.JPanel StudentTab;
    private javax.swing.JComboBox<String> Studentchooser;
    private javax.swing.JComboBox<String> Studentchooser1;
    private javax.swing.JButton Studentsubmit;
    private javax.swing.JLabel WailistS;
    private javax.swing.JTable Waitlistedstudentable;
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JTextField addcoursecodetf;
    private javax.swing.JTextField addcoursedescriptiontf;
    private javax.swing.JSpinner addseatsspinner;
    private javax.swing.JButton adropcoursebutton;
    private javax.swing.JComboBox<String> adropcoursecb;
    private javax.swing.JTextArea adropcoursetf;
    private javax.swing.JButton adropstudentbutton;
    private javax.swing.JComboBox<String> adropstudentcb;
    private javax.swing.JTextArea adropstudentta;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> coursechooser;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JTable displayschedule;
    private javax.swing.JComboBox<String> displayselectedcoursescb;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JComboBox<String> sdropcoursecb;
    // End of variables declaration//GEN-END:variables
}
